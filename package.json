{
  "name": "mac-control",
  "version": "0.0.8",
  "description": "Simple module to control Mac OS from Node",
  "main": "index.js",
  "scripts": {
    "install": "node-gyp rebuild",
    "test": "node app.js"
  },
  "keywords": [
    "mac",
    "keyboard",
    "mouse",
    "control",
    "apple",
    "key",
    "native"
  ],
  "author": {
    "name": "bhawkes"
  },
  "license": "ISC",
  "gypfile": true,
  "readme": "#  mac-control\n\n    // install\n    \n    npm install mac-control\n    \n    // .js\n    \n    var mc = require(\"mac-control\");\n    mc.keyPress(\"a\");\n\nSend key commands to Mac OS from Node. \n\nThis module features key holding and releasing, making development things like game controllers super easy!\n\n## mc.keyPress( ) \n\nWill press keys given to it.\n\n## mc.keyHold( ) \n\nHolds a key until it's told to be released.\n\n## mc.keyRelease( )\n\nReleases a key thats being held.\n\n## Usage\n\nArguments can be given as a keycode as a number, particular button as a string or as an array filled with either.\n\nUsing keyPress with an array will press the keys in order, then release them in the same order.\n\nFuture work on this module will include mouse control, volume and brightness.\n\n## Examples\n\n    mc.keyPress(12);  // q\n    \n    mc.keyPress(\"b\"); // b\n    \n    mc.keyPress(\"T\"); // t\n\n    mc.keyPress(\"tab\"); // tab key\n\n## Passing arrays\n\n    mc.keyPress([\"shift\",\"q\"]); // Q\n    \n    mc.keyPress([\"a\",\"b\",\" \",\"c\"]); // ab c\n\n    mc.keyPress([\"shift\",\"a\",\"b\",\"c\"]); // ABC\n    \n    mc.keyPress([\"shift\",\"2\"]); // @\n\n# keyHold / keyRelease examples\n    \n    mc.keyHold(\"b\");\n\n    setTimeout(function(){\n        mc.keyRelease(\"b\");\n    },1000);\n    \n    mc.keyHold(\"shift\");\n    mc.keyPress(\"a\");\n    mc.keyRelease(\"shift\");\n\n## Supported non-letter strings:\n\ntab, command/cmd, control/ctrl, alt/option/opt, enter/return, delete/del, \nfunction/fn, escape/esc, capslock/caps, up, down, left, right, shift\n\n##  Shift key modifier table\n    //   a z 1 2 3 4 5 6 7 8 9 0 - = [ ] ; ' \\ ` , . /\n    //   A Z ! @ Â£ $ % ^ & * ( ) _ + { } : \" | ~ < > ?\n    \n    May differ depending on your keyboard layout.\n    \n## Proposed features\n    \n    mc.keyPress(\"a\",true,2000,callback); // key repeat, duration of press, callback function \n    \n",
  "readmeFilename": "readme.md",
  "_id": "mac-control@0.0.8",
  "_from": "mac-control@",
  "dependencies": {
    "nan": "^1.3.0"
  }
}
